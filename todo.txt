
stop bullet accelerating every update!

change collision grid...  have an array of grids say 400x400 and have a number of overflow grids for the boundaries.
find the grid for the top left of the actor and then scan over the actor finding each grid it covers.  should allow of actors
bigger than the grid size.


fade background based on range from center...
fade layers at different rates perhaps...
cyclic background palette
change palette to a red palette based on range from center
convert background plasma to all integer



fix game loop!!!





/* Several logging routines */

#include <stdio.h>
#include <stdarg.h>

void log_warning(const char *fmt, ...)
{
  va_list ap;
  
  fprintf(stderr, "WARNING: ");
  va_start(ap, fmt);
  vfprintf(stderr, fmt, ap);
  va_end(ap);
  fprintf(stderr, "\n");
}

void log_debug(const char *fmt, ...)
{
#ifdef DEBUG
  va_list ap;
  
  fprintf(stderr, "DEBUG: ");
  va_start(ap, fmt);
  vfprintf(stderr, fmt, ap);
  va_end(ap);
  fprintf(stderr, "\n");
#endif
}



maybe interpolate verlet movement?


modularize more...

fade the background alpha based on distance from origin.  not the grid.  fade different levels at different rates.
perhaps spawn an indesructable enemy there...
or maybe have the enemy killable but very tough...
loose points and life as you go further from the origin.



have console interpret \n and split string...

colors in console
wrap long lines in console
page up and down in console

maybe execute lua in a thread...?
   investigate lua_resume, yield etc...







delete singletons!

make a path class

have weapon and bomb class

maybe lerp the background palette...

have a rendertarget that maintains a list of polygon.  
draws transparent triangles correctly.


=====

polygon counter...

export from blender in a format for glDrawElements.


$Id: todo.txt,v 1.23 2003-08-29 00:00:06 bernard Exp $
