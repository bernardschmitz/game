

#include "enemy.h"
#include "player.h"
#include "random.h"

#define MOVING      0
#define TRACKING    1
#define TARGET      2



Enemy::Enemy(vector3 p) : Actor(ACT_ENEMY, p, vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 1.0)) { 

   //can turn once a frame
   angular_vel.set(0.0, 0.0, degToRad(90.0/50.0));

   w_spd = 180.0;
   v_spd = 0.5;
   v_acc = 750 + uniform_random_float(-50.0, 50.0);

   mass = 10.0;

   drag = 2;
   friction = 500;

   direction.set(1.0, 0.0, 0.0);
   rot.set(0.0, 0.0, 0.0, 1.0);

   position = p;

   //sgMakeIdentQuat(rot);

   delay = 1;
   state = TARGET;


   dl_enemy = glGenLists(1);

   glNewList(dl_enemy, GL_COMPILE);
 
// Material material
static GLfloat mat_0_diffuse[] = { 0.514286, 0.000000, 0.000000, 1.000000 };
static GLfloat mat_0_ambient[] = { 0.257143, 0.000000, 0.000000, 1.0 };
static GLfloat mat_0_specular[] = { 1.000000, 0.729323, 0.233083, 1.0 };
static GLfloat mat_0_emission[] = { 0.000000, 0.000000, 0.000000, 1.0 };
static GLfloat mat_0_shine = 98.886275;
// Material.001 material
static GLfloat mat_1_diffuse[] = { 0.000000, 0.000000, 0.800000, 1.000000 };
static GLfloat mat_1_ambient[] = { 0.000000, 0.000000, 0.400000, 1.0 };
static GLfloat mat_1_specular[] = { 0.563910, 0.390977, 1.000000, 1.0 };
static GLfloat mat_1_emission[] = { 0.000000, 0.000000, 0.000000, 1.0 };
static GLfloat mat_1_shine = 103.905882;

// Sphere
glBegin(GL_TRIANGLES);
  glNormal3f(0.581022, 0.664006, -0.470648);
 glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_0_diffuse);
 glMaterialfv(GL_FRONT, GL_AMBIENT, mat_0_ambient);
 glMaterialfv(GL_FRONT, GL_SPECULAR, mat_0_specular);
 glMaterialf(GL_FRONT, GL_SHININESS, mat_0_shine);
 glMaterialfv(GL_FRONT, GL_EMISSION, mat_0_emission);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.182361, 0.702066, -0.315858);
  glVertex3f(0.000000, 0.766376, 0.000000);
  glNormal3f(0.472694, 0.582505, -0.661247);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.342727, 0.516891, -0.593620);
  glVertex3f(-0.182361, 0.702066, -0.315858);
  glNormal3f(0.384770, 0.431500, -0.815941);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.461754, 0.233188, -0.799782);
  glVertex3f(-0.342727, 0.516891, -0.593620);
  glNormal3f(0.327568, 0.229301, -0.916581);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.525088, -0.114826, -0.909478);
  glVertex3f(-0.461754, 0.233188, -0.799782);
  glNormal3f(0.307736, 0.000000, -0.951472);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.525088, -0.485174, -0.909478);
  glVertex3f(-0.525088, -0.114826, -0.909478);
  glNormal3f(0.327568, -0.229301, -0.916581);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.461754, -0.833188, -0.799782);
  glVertex3f(-0.525088, -0.485174, -0.909478);
  glNormal3f(0.384770, -0.431499, -0.815942);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.342727, -1.116891, -0.593620);
  glVertex3f(-0.461754, -0.833188, -0.799782);
  glNormal3f(0.472694, -0.582505, -0.661247);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.182361, -1.302065, -0.315859);
  glVertex3f(-0.342727, -1.116891, -0.593620);
  glNormal3f(0.581022, -0.664006, -0.470648);
  glVertex3f(-0.182361, -1.302065, -0.315859);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(-0.000000, -1.366376, 0.000000);
  glNormal3f(-0.172782, -0.979895, -0.099756);
  glVertex3f(-0.000000, -1.366376, 0.000000);
  glVertex3f(-0.364722, -1.302065, -0.000000);
  glVertex3f(-0.182361, -1.302065, -0.315859);
  glNormal3f(-0.172782, 0.979896, -0.099756);
  glVertex3f(-0.182361, 0.702066, -0.315858);
  glVertex3f(-0.364722, 0.702066, 0.000000);
  glVertex3f(0.000000, 0.766376, 0.000000);
  glNormal3f(-0.172782, 0.979896, 0.099756);
  glVertex3f(-0.364722, 0.702066, 0.000000);
  glVertex3f(-0.182361, 0.702066, 0.315859);
  glVertex3f(0.000000, 0.766376, 0.000000);
  glNormal3f(-0.172783, -0.979895, 0.099756);
  glVertex3f(-0.000000, -1.366376, 0.000000);
  glVertex3f(-0.182361, -1.302065, 0.315859);
  glVertex3f(-0.364722, -1.302065, -0.000000);
  glNormal3f(0.000000, -0.979895, 0.199512);
  glVertex3f(-0.000000, -1.366376, 0.000000);
  glVertex3f(0.182361, -1.302065, 0.315859);
  glVertex3f(-0.182361, -1.302065, 0.315859);
  glNormal3f(0.000000, 0.979896, 0.199511);
  glVertex3f(-0.182361, 0.702066, 0.315859);
  glVertex3f(0.182361, 0.702066, 0.315859);
  glVertex3f(0.000000, 0.766376, 0.000000);
  glNormal3f(0.696876, 0.665719, -0.266798);
  glVertex3f(0.182361, 0.702066, 0.315859);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.000000, 0.766376, 0.000000);
  glNormal3f(0.806286, 0.586844, -0.074280);
  glVertex3f(0.342727, 0.516891, 0.593620);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.182361, 0.702066, 0.315859);
  glNormal3f(0.895868, 0.436433, 0.083354);
  glVertex3f(0.461754, 0.233188, 0.799782);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.342727, 0.516891, 0.593620);
  glNormal3f(0.954528, 0.232521, 0.186578);
  glVertex3f(0.525088, -0.114826, 0.909478);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.461754, 0.233188, 0.799782);
  glNormal3f(0.974935, 0.000000, 0.222490);
  glVertex3f(0.525088, -0.485174, 0.909478);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.525088, -0.114826, 0.909478);
  glNormal3f(0.954528, -0.232521, 0.186578);
  glVertex3f(0.461754, -0.833188, 0.799782);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.525088, -0.485174, 0.909478);
  glNormal3f(0.895868, -0.436432, 0.083354);
  glVertex3f(0.342727, -1.116891, 0.593620);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.461754, -0.833188, 0.799782);
  glNormal3f(0.806286, -0.586844, -0.074280);
  glVertex3f(0.182361, -1.302065, 0.315859);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.342727, -1.116891, 0.593620);
  glNormal3f(0.696876, -0.665719, -0.266798);
  glVertex3f(-0.000000, -1.366376, 0.000000);
  glVertex3f(0.839473, -0.300000, -0.468137);
  glVertex3f(0.182361, -1.302065, 0.315859);
glEnd();

glBegin(GL_QUADS);
  glNormal3f(-0.480384, -0.832050, -0.277350);
 glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_0_diffuse);
 glMaterialfv(GL_FRONT, GL_AMBIENT, mat_0_ambient);
 glMaterialfv(GL_FRONT, GL_SPECULAR, mat_0_specular);
 glMaterialf(GL_FRONT, GL_SHININESS, mat_0_shine);
 glMaterialfv(GL_FRONT, GL_EMISSION, mat_0_emission);
  glVertex3f(-0.182361, -1.302065, -0.315859);
  glVertex3f(-0.364722, -1.302065, -0.000000);
  glVertex3f(-0.685454, -1.116891, -0.000000);
  glVertex3f(-0.342727, -1.116891, -0.593620);
  glNormal3f(-0.700583, -0.587858, -0.404482);
  glVertex3f(-0.342727, -1.116891, -0.593620);
  glVertex3f(-0.685454, -1.116891, -0.000000);
  glVertex3f(-0.923509, -0.833188, -0.000000);
  glVertex3f(-0.461754, -0.833188, -0.799782);
  glNormal3f(-0.825965, -0.300627, -0.476871);
  glVertex3f(-0.461754, -0.833188, -0.799782);
  glVertex3f(-0.923509, -0.833188, -0.000000);
  glVertex3f(-1.050175, -0.485174, 0.000000);
  glVertex3f(-0.525088, -0.485174, -0.909478);
  glNormal3f(-0.866025, 0.000000, -0.500000);
  glVertex3f(-0.525088, -0.485174, -0.909478);
  glVertex3f(-1.050175, -0.485174, 0.000000);
  glVertex3f(-1.050175, -0.114826, 0.000000);
  glVertex3f(-0.525088, -0.114826, -0.909478);
  glNormal3f(-0.825965, 0.300627, -0.476871);
  glVertex3f(-0.525088, -0.114826, -0.909478);
  glVertex3f(-1.050175, -0.114826, 0.000000);
  glVertex3f(-0.923509, 0.233188, 0.000000);
  glVertex3f(-0.461754, 0.233188, -0.799782);
  glNormal3f(-0.700583, 0.587859, -0.404482);
  glVertex3f(-0.461754, 0.233188, -0.799782);
  glVertex3f(-0.923509, 0.233188, 0.000000);
  glVertex3f(-0.685453, 0.516891, 0.000000);
  glVertex3f(-0.342727, 0.516891, -0.593620);
  glNormal3f(-0.480384, 0.832050, -0.277350);
  glVertex3f(-0.342727, 0.516891, -0.593620);
  glVertex3f(-0.685453, 0.516891, 0.000000);
  glVertex3f(-0.364722, 0.702066, 0.000000);
  glVertex3f(-0.182361, 0.702066, -0.315858);
  glNormal3f(-0.480384, 0.832050, 0.277350);
  glVertex3f(-0.685453, 0.516891, 0.000000);
  glVertex3f(-0.342727, 0.516891, 0.593620);
  glVertex3f(-0.182361, 0.702066, 0.315859);
  glVertex3f(-0.364722, 0.702066, 0.000000);
  glNormal3f(-0.700583, 0.587859, 0.404482);
  glVertex3f(-0.923509, 0.233188, 0.000000);
  glVertex3f(-0.461754, 0.233188, 0.799782);
  glVertex3f(-0.342727, 0.516891, 0.593620);
  glVertex3f(-0.685453, 0.516891, 0.000000);
  glNormal3f(-0.825965, 0.300626, 0.476871);
  glVertex3f(-1.050175, -0.114826, 0.000000);
  glVertex3f(-0.525088, -0.114826, 0.909478);
  glVertex3f(-0.461754, 0.233188, 0.799782);
  glVertex3f(-0.923509, 0.233188, 0.000000);
  glNormal3f(-0.866025, 0.000000, 0.500000);
  glVertex3f(-1.050175, -0.485174, 0.000000);
  glVertex3f(-0.525088, -0.485174, 0.909478);
  glVertex3f(-0.525088, -0.114826, 0.909478);
  glVertex3f(-1.050175, -0.114826, 0.000000);
  glNormal3f(-0.825965, -0.300626, 0.476871);
  glVertex3f(-0.923509, -0.833188, -0.000000);
  glVertex3f(-0.461754, -0.833188, 0.799782);
  glVertex3f(-0.525088, -0.485174, 0.909478);
  glVertex3f(-1.050175, -0.485174, 0.000000);
  glNormal3f(-0.700583, -0.587858, 0.404482);
  glVertex3f(-0.685454, -1.116891, -0.000000);
  glVertex3f(-0.342727, -1.116891, 0.593620);
  glVertex3f(-0.461754, -0.833188, 0.799782);
  glVertex3f(-0.923509, -0.833188, -0.000000);
  glNormal3f(-0.480384, -0.832050, 0.277350);
  glVertex3f(-0.364722, -1.302065, -0.000000);
  glVertex3f(-0.182361, -1.302065, 0.315859);
  glVertex3f(-0.342727, -1.116891, 0.593620);
  glVertex3f(-0.685454, -1.116891, -0.000000);
  glNormal3f(0.000000, -0.832050, 0.554700);
  glVertex3f(-0.182361, -1.302065, 0.315859);
  glVertex3f(0.182361, -1.302065, 0.315859);
  glVertex3f(0.342727, -1.116891, 0.593620);
  glVertex3f(-0.342727, -1.116891, 0.593620);
  glNormal3f(0.000000, -0.587858, 0.808964);
  glVertex3f(-0.342727, -1.116891, 0.593620);
  glVertex3f(0.342727, -1.116891, 0.593620);
  glVertex3f(0.461754, -0.833188, 0.799782);
  glVertex3f(-0.461754, -0.833188, 0.799782);
  glNormal3f(0.000000, -0.300626, 0.953742);
  glVertex3f(-0.461754, -0.833188, 0.799782);
  glVertex3f(0.461754, -0.833188, 0.799782);
  glVertex3f(0.525088, -0.485174, 0.909478);
  glVertex3f(-0.525088, -0.485174, 0.909478);
  glNormal3f(0.000000, 0.000000, 1.000000);
  glVertex3f(-0.525088, -0.485174, 0.909478);
  glVertex3f(0.525088, -0.485174, 0.909478);
  glVertex3f(0.525088, -0.114826, 0.909478);
  glVertex3f(-0.525088, -0.114826, 0.909478);
  glNormal3f(0.000000, 0.300626, 0.953742);
  glVertex3f(-0.525088, -0.114826, 0.909478);
  glVertex3f(0.525088, -0.114826, 0.909478);
  glVertex3f(0.461754, 0.233188, 0.799782);
  glVertex3f(-0.461754, 0.233188, 0.799782);
  glNormal3f(0.000000, 0.587859, 0.808964);
  glVertex3f(-0.461754, 0.233188, 0.799782);
  glVertex3f(0.461754, 0.233188, 0.799782);
  glVertex3f(0.342727, 0.516891, 0.593620);
  glVertex3f(-0.342727, 0.516891, 0.593620);
  glNormal3f(-0.000000, 0.832050, 0.554700);
  glVertex3f(-0.342727, 0.516891, 0.593620);
  glVertex3f(0.342727, 0.516891, 0.593620);
  glVertex3f(0.182361, 0.702066, 0.315859);
  glVertex3f(-0.182361, 0.702066, 0.315859);
glEnd();


// Mesh
 glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_1_diffuse);
 glMaterialfv(GL_FRONT, GL_AMBIENT, mat_1_ambient);
 glMaterialfv(GL_FRONT, GL_SPECULAR, mat_1_specular);
 glMaterialf(GL_FRONT, GL_SHININESS, mat_1_shine);
 glMaterialfv(GL_FRONT, GL_EMISSION, mat_1_emission);
glBegin(GL_QUADS);
  glNormal3f(-0.496292, -0.488937, 0.717338);
  glVertex3f(-1.411218, -1.411218, 0.082110);
  glNormal3f(-0.248970, -0.232582, 0.940153);
  glVertex3f(-1.115412, -1.108796, 0.494110);
  glNormal3f(-0.356334, 0.043703, 0.933317);
  glVertex3f(-1.536576, -0.273487, 0.484035);
  glNormal3f(-0.689138, -0.029481, 0.724021);
  glVertex3f(-1.949553, -0.351797, 0.080904);
  glNormal3f(-0.163060, -0.681082, 0.713797);
  glVertex3f(-0.327744, -1.978857, 0.082110);
  glNormal3f(-0.084994, -0.322214, 0.942808);
  glVertex3f(-0.259718, -1.563827, 0.495716);
  glNormal3f(-0.248970, -0.232582, 0.940153);
  glVertex3f(-1.115412, -1.108796, 0.494110);
  glNormal3f(-0.496292, -0.488937, 0.717338);
  glVertex3f(-1.411218, -1.411218, 0.082110);
  glNormal3f(0.163060, -0.681082, 0.713797);
  glVertex3f(0.327744, -1.978857, 0.082110);
  glNormal3f(0.084994, -0.322214, 0.942808);
  glVertex3f(0.259718, -1.563827, 0.495716);
  glNormal3f(-0.084994, -0.322214, 0.942808);
  glVertex3f(-0.259718, -1.563827, 0.495716);
  glNormal3f(-0.163060, -0.681082, 0.713797);
  glVertex3f(-0.327744, -1.978857, 0.082110);
  glNormal3f(0.496292, -0.488937, 0.717338);
  glVertex3f(1.411219, -1.411218, 0.082110);
  glNormal3f(0.248970, -0.232582, 0.940153);
  glVertex3f(1.115412, -1.108795, 0.494110);
  glNormal3f(0.084994, -0.322214, 0.942808);
  glVertex3f(0.259718, -1.563827, 0.495716);
  glNormal3f(0.163060, -0.681082, 0.713797);
  glVertex3f(0.327744, -1.978857, 0.082110);
  glNormal3f(0.689138, -0.029481, 0.724021);
  glVertex3f(1.949553, -0.351796, 0.080904);
  glNormal3f(0.356334, 0.043703, 0.933317);
  glVertex3f(1.536576, -0.273486, 0.484035);
  glNormal3f(0.248970, -0.232582, 0.940153);
  glVertex3f(1.115412, -1.108795, 0.494110);
  glNormal3f(0.496292, -0.488937, 0.717338);
  glVertex3f(1.411219, -1.411218, 0.082110);
  glNormal3f(0.601978, 0.464003, 0.649861);
  glVertex3f(1.759076, 0.138848, 0.072641);
  glNormal3f(0.210395, 0.366558, 0.906278);
  glVertex3f(1.385578, 0.119193, 0.434145);
  glNormal3f(0.356334, 0.043703, 0.933317);
  glVertex3f(1.536576, -0.273486, 0.484035);
  glNormal3f(0.689138, -0.029481, 0.724021);
  glVertex3f(1.949553, -0.351796, 0.080904);
  glNormal3f(0.349528, 0.727653, 0.590167);
  glVertex3f(0.904643, 0.701425, 0.046531);
  glNormal3f(0.040895, 0.382977, 0.922819);
  glVertex3f(0.713833, 0.588167, 0.279292);
  glNormal3f(0.210395, 0.366558, 0.906278);
  glVertex3f(1.385578, 0.119193, 0.434145);
  glNormal3f(0.601978, 0.464003, 0.649861);
  glVertex3f(1.759076, 0.138848, 0.072641);
  glNormal3f(0.116550, 0.730644, 0.672689);
  glVertex3f(0.137267, 0.983562, 0.032220);
  glNormal3f(0.014618, 0.323252, 0.946165);
  glVertex3f(0.108720, 0.824747, 0.194491);
  glNormal3f(0.040895, 0.382977, 0.922819);
  glVertex3f(0.713833, 0.588167, 0.279292);
  glNormal3f(0.349528, 0.727653, 0.590167);
  glVertex3f(0.904643, 0.701425, 0.046531);
  glNormal3f(-0.116550, 0.730644, 0.672689);
  glVertex3f(-0.137267, 0.983562, 0.032220);
  glNormal3f(-0.014618, 0.323252, 0.946165);
  glVertex3f(-0.108720, 0.824747, 0.194491);
  glNormal3f(0.014618, 0.323252, 0.946165);
  glVertex3f(0.108720, 0.824747, 0.194491);
  glNormal3f(0.116550, 0.730644, 0.672689);
  glVertex3f(0.137267, 0.983562, 0.032220);
  glNormal3f(-0.349528, 0.727653, 0.590167);
  glVertex3f(-0.904643, 0.701425, 0.046531);
  glNormal3f(-0.040895, 0.382977, 0.922819);
  glVertex3f(-0.713832, 0.588167, 0.279292);
  glNormal3f(-0.014618, 0.323252, 0.946165);
  glVertex3f(-0.108720, 0.824747, 0.194491);
  glNormal3f(-0.116550, 0.730644, 0.672689);
  glVertex3f(-0.137267, 0.983562, 0.032220);
  glNormal3f(-0.601978, 0.464003, 0.649861);
  glVertex3f(-1.759076, 0.138848, 0.072641);
  glNormal3f(-0.210395, 0.366558, 0.906278);
  glVertex3f(-1.385579, 0.119192, 0.434145);
  glNormal3f(-0.040895, 0.382977, 0.922819);
  glVertex3f(-0.713832, 0.588167, 0.279292);
  glNormal3f(-0.349528, 0.727653, 0.590167);
  glVertex3f(-0.904643, 0.701425, 0.046531);
  glNormal3f(-0.689138, -0.029481, 0.724021);
  glVertex3f(-1.949553, -0.351797, 0.080904);
  glNormal3f(-0.356334, 0.043703, 0.933317);
  glVertex3f(-1.536576, -0.273487, 0.484035);
  glNormal3f(-0.210395, 0.366558, 0.906278);
  glVertex3f(-1.385579, 0.119192, 0.434145);
  glNormal3f(-0.601978, 0.464003, 0.649861);
  glVertex3f(-1.759076, 0.138848, 0.072641);
  glNormal3f(-0.248970, -0.232582, 0.940153);
  glVertex3f(-1.115412, -1.108796, 0.494110);
  glNormal3f(0.454878, 0.330638, 0.826868);
  glVertex3f(-0.713018, -0.517767, 0.324954);
  glNormal3f(0.516770, 0.031709, 0.855525);
  glVertex3f(-0.857252, -0.072777, 0.271434);
  glNormal3f(-0.356334, 0.043703, 0.933317);
  glVertex3f(-1.536576, -0.273487, 0.484035);
  glNormal3f(-0.084994, -0.322214, 0.942808);
  glVertex3f(-0.259718, -1.563827, 0.495716);
  glNormal3f(0.183905, 0.517106, 0.835902);
  glVertex3f(-0.185445, -0.992717, 0.352726);
  glNormal3f(0.454878, 0.330638, 0.826868);
  glVertex3f(-0.713018, -0.517767, 0.324954);
  glNormal3f(-0.248970, -0.232582, 0.940153);
  glVertex3f(-1.115412, -1.108796, 0.494110);
  glNormal3f(0.084994, -0.322214, 0.942808);
  glVertex3f(0.259718, -1.563827, 0.495716);
  glNormal3f(-0.183905, 0.517106, 0.835902);
  glVertex3f(0.185445, -0.992717, 0.352726);
  glNormal3f(0.183905, 0.517106, 0.835902);
  glVertex3f(-0.185445, -0.992717, 0.352726);
  glNormal3f(-0.084994, -0.322214, 0.942808);
  glVertex3f(-0.259718, -1.563827, 0.495716);
  glNormal3f(0.248970, -0.232582, 0.940153);
  glVertex3f(1.115412, -1.108795, 0.494110);
  glNormal3f(-0.454878, 0.330638, 0.826868);
  glVertex3f(0.713018, -0.517767, 0.324954);
  glNormal3f(-0.183905, 0.517106, 0.835902);
  glVertex3f(0.185445, -0.992717, 0.352726);
  glNormal3f(0.084994, -0.322214, 0.942808);
  glVertex3f(0.259718, -1.563827, 0.495716);
  glNormal3f(0.356334, 0.043703, 0.933317);
  glVertex3f(1.536576, -0.273486, 0.484035);
  glNormal3f(-0.516770, 0.031709, 0.855525);
  glVertex3f(0.857252, -0.072777, 0.271434);
  glNormal3f(-0.454878, 0.330638, 0.826868);
  glVertex3f(0.713018, -0.517767, 0.324954);
  glNormal3f(0.248970, -0.232582, 0.940153);
  glVertex3f(1.115412, -1.108795, 0.494110);
  glNormal3f(0.210395, 0.366558, 0.906278);
  glVertex3f(1.385578, 0.119193, 0.434145);
  glNormal3f(-0.533372, -0.281045, 0.797784);
  glVertex3f(0.747834, 0.114256, 0.235855);
  glNormal3f(-0.516770, 0.031709, 0.855525);
  glVertex3f(0.857252, -0.072777, 0.271434);
  glNormal3f(0.356334, 0.043703, 0.933317);
  glVertex3f(1.536576, -0.273486, 0.484035);
  glNormal3f(0.040895, 0.382977, 0.922819);
  glVertex3f(0.713833, 0.588167, 0.279292);
  glNormal3f(-0.463698, -0.435591, 0.771477);
  glVertex3f(0.422021, 0.468882, 0.171757);
  glNormal3f(-0.533372, -0.281045, 0.797784);
  glVertex3f(0.747834, 0.114256, 0.235855);
  glNormal3f(0.210395, 0.366558, 0.906278);
  glVertex3f(1.385578, 0.119193, 0.434145);
  glNormal3f(0.014618, 0.323252, 0.946165);
  glVertex3f(0.108720, 0.824747, 0.194491);
  glNormal3f(-0.205542, -0.634632, 0.744957);
  glVertex3f(0.076027, 0.657482, 0.137908);
  glNormal3f(-0.463698, -0.435591, 0.771477);
  glVertex3f(0.422021, 0.468882, 0.171757);
  glNormal3f(0.040895, 0.382977, 0.922819);
  glVertex3f(0.713833, 0.588167, 0.279292);
  glNormal3f(-0.014618, 0.323252, 0.946165);
  glVertex3f(-0.108720, 0.824747, 0.194491);
  glNormal3f(0.205542, -0.634632, 0.744957);
  glVertex3f(-0.076027, 0.657482, 0.137908);
  glNormal3f(-0.205542, -0.634632, 0.744957);
  glVertex3f(0.076027, 0.657482, 0.137908);
  glNormal3f(0.014618, 0.323252, 0.946165);
  glVertex3f(0.108720, 0.824747, 0.194491);
  glNormal3f(-0.040895, 0.382977, 0.922819);
  glVertex3f(-0.713832, 0.588167, 0.279292);
  glNormal3f(0.463698, -0.435591, 0.771477);
  glVertex3f(-0.422021, 0.468882, 0.171757);
  glNormal3f(0.205542, -0.634632, 0.744957);
  glVertex3f(-0.076027, 0.657482, 0.137908);
  glNormal3f(-0.014618, 0.323252, 0.946165);
  glVertex3f(-0.108720, 0.824747, 0.194491);
  glNormal3f(-0.210395, 0.366558, 0.906278);
  glVertex3f(-1.385579, 0.119192, 0.434145);
  glNormal3f(0.533372, -0.281045, 0.797784);
  glVertex3f(-0.747834, 0.114256, 0.235855);
  glNormal3f(0.463698, -0.435591, 0.771477);
  glVertex3f(-0.422021, 0.468882, 0.171757);
  glNormal3f(-0.040895, 0.382977, 0.922819);
  glVertex3f(-0.713832, 0.588167, 0.279292);
  glNormal3f(-0.356334, 0.043703, 0.933317);
  glVertex3f(-1.536576, -0.273487, 0.484035);
  glNormal3f(0.516770, 0.031709, 0.855525);
  glVertex3f(-0.857252, -0.072777, 0.271434);
  glNormal3f(0.533372, -0.281045, 0.797784);
  glVertex3f(-0.747834, 0.114256, 0.235855);
  glNormal3f(-0.210395, 0.366558, 0.906278);
  glVertex3f(-1.385579, 0.119192, 0.434145);
  glNormal3f(0.454878, 0.330638, 0.826868);
  glVertex3f(-0.713018, -0.517767, 0.324954);
  glNormal3f(0.828822, 0.535417, 0.162297);
  glVertex3f(-0.573185, -0.299397, -0.071357);
  glNormal3f(0.813196, -0.178320, 0.553972);
  glVertex3f(-0.612688, 0.003778, -0.051979);
  glNormal3f(0.516770, 0.031709, 0.855525);
  glVertex3f(-0.857252, -0.072777, 0.271434);
  glNormal3f(0.183905, 0.517106, 0.835902);
  glVertex3f(-0.185445, -0.992717, 0.352726);
  glNormal3f(0.367046, 0.873501, -0.319742);
  glVertex3f(-0.160955, -0.793783, -0.081799);
  glNormal3f(0.828822, 0.535417, 0.162297);
  glVertex3f(-0.573185, -0.299397, -0.071357);
  glNormal3f(0.454878, 0.330638, 0.826868);
  glVertex3f(-0.713018, -0.517767, 0.324954);
  glNormal3f(-0.183905, 0.517106, 0.835902);
  glVertex3f(0.185445, -0.992717, 0.352726);
  glNormal3f(-0.367046, 0.873501, -0.319742);
  glVertex3f(0.160955, -0.793783, -0.081799);
  glNormal3f(0.367046, 0.873501, -0.319742);
  glVertex3f(-0.160955, -0.793783, -0.081799);
  glNormal3f(0.183905, 0.517106, 0.835902);
  glVertex3f(-0.185445, -0.992717, 0.352726);
  glNormal3f(-0.454878, 0.330638, 0.826868);
  glVertex3f(0.713018, -0.517767, 0.324954);
  glNormal3f(-0.828822, 0.535417, 0.162297);
  glVertex3f(0.573185, -0.299397, -0.071357);
  glNormal3f(-0.367046, 0.873501, -0.319742);
  glVertex3f(0.160955, -0.793783, -0.081799);
  glNormal3f(-0.183905, 0.517106, 0.835902);
  glVertex3f(0.185445, -0.992717, 0.352726);
  glNormal3f(-0.516770, 0.031709, 0.855525);
  glVertex3f(0.857252, -0.072777, 0.271434);
  glNormal3f(-0.813196, -0.178320, 0.553972);
  glVertex3f(0.612688, 0.003778, -0.051979);
  glNormal3f(-0.828822, 0.535417, 0.162297);
  glVertex3f(0.573185, -0.299397, -0.071357);
  glNormal3f(-0.454878, 0.330638, 0.826868);
  glVertex3f(0.713018, -0.517767, 0.324954);
  glNormal3f(-0.533372, -0.281045, 0.797784);
  glVertex3f(0.747834, 0.114256, 0.235855);
  glNormal3f(-0.707144, -0.482467, 0.516831);
  glVertex3f(0.516843, 0.114116, -0.043716);
  glNormal3f(-0.813196, -0.178320, 0.553972);
  glVertex3f(0.612688, 0.003778, -0.051979);
  glNormal3f(-0.516770, 0.031709, 0.855525);
  glVertex3f(0.857252, -0.072777, 0.271434);
  glNormal3f(-0.463698, -0.435591, 0.771477);
  glVertex3f(0.422021, 0.468882, 0.171757);
  glNormal3f(-0.597278, -0.675405, 0.432447);
  glVertex3f(0.318284, 0.429945, -0.035778);
  glNormal3f(-0.707144, -0.482467, 0.516831);
  glVertex3f(0.516843, 0.114116, -0.043716);
  glNormal3f(-0.533372, -0.281045, 0.797784);
  glVertex3f(0.747834, 0.114256, 0.235855);
  glNormal3f(-0.205542, -0.634632, 0.744957);
  glVertex3f(0.076027, 0.657482, 0.137908);
  glNormal3f(-0.263100, -0.903104, 0.339305);
  glVertex3f(0.065110, 0.602883, -0.031909);
  glNormal3f(-0.597278, -0.675405, 0.432447);
  glVertex3f(0.318284, 0.429945, -0.035778);
  glNormal3f(-0.463698, -0.435591, 0.771477);
  glVertex3f(0.422021, 0.468882, 0.171757);
  glNormal3f(0.205542, -0.634632, 0.744957);
  glVertex3f(-0.076027, 0.657482, 0.137908);
  glNormal3f(0.263100, -0.903104, 0.339305);
  glVertex3f(-0.065110, 0.602883, -0.031909);
  glNormal3f(-0.263100, -0.903104, 0.339305);
  glVertex3f(0.065110, 0.602883, -0.031909);
  glNormal3f(-0.205542, -0.634632, 0.744957);
  glVertex3f(0.076027, 0.657482, 0.137908);
  glNormal3f(0.463698, -0.435591, 0.771477);
  glVertex3f(-0.422021, 0.468882, 0.171757);
  glNormal3f(0.597278, -0.675405, 0.432447);
  glVertex3f(-0.318285, 0.429945, -0.035778);
  glNormal3f(0.263100, -0.903104, 0.339305);
  glVertex3f(-0.065110, 0.602883, -0.031909);
  glNormal3f(0.205542, -0.634632, 0.744957);
  glVertex3f(-0.076027, 0.657482, 0.137908);
  glNormal3f(0.533372, -0.281045, 0.797784);
  glVertex3f(-0.747834, 0.114256, 0.235855);
  glNormal3f(0.707144, -0.482467, 0.516831);
  glVertex3f(-0.516843, 0.114116, -0.043716);
  glNormal3f(0.597278, -0.675405, 0.432447);
  glVertex3f(-0.318285, 0.429945, -0.035778);
  glNormal3f(0.463698, -0.435591, 0.771477);
  glVertex3f(-0.422021, 0.468882, 0.171757);
  glNormal3f(0.516770, 0.031709, 0.855525);
  glVertex3f(-0.857252, -0.072777, 0.271434);
  glNormal3f(0.813196, -0.178320, 0.553972);
  glVertex3f(-0.612688, 0.003778, -0.051979);
  glNormal3f(0.707144, -0.482467, 0.516831);
  glVertex3f(-0.516843, 0.114116, -0.043716);
  glNormal3f(0.533372, -0.281045, 0.797784);
  glVertex3f(-0.747834, 0.114256, 0.235855);
  glNormal3f(0.367046, 0.873501, -0.319742);
  glVertex3f(-0.160955, -0.793783, -0.081799);
  glNormal3f(0.025849, 0.076937, -0.996673);
  glVertex3f(-0.232094, -1.367552, -0.495405);
  glNormal3f(0.060030, 0.054018, -0.996704);
  glVertex3f(-0.976614, -0.924653, -0.483356);
  glNormal3f(0.828822, 0.535417, 0.162297);
  glVertex3f(-0.573185, -0.299397, -0.071357);
  glNormal3f(-0.367046, 0.873501, -0.319742);
  glVertex3f(0.160955, -0.793783, -0.081799);
  glNormal3f(-0.025849, 0.076937, -0.996673);
  glVertex3f(0.232094, -1.367551, -0.495405);
  glNormal3f(0.025849, 0.076937, -0.996673);
  glVertex3f(-0.232094, -1.367552, -0.495405);
  glNormal3f(0.367046, 0.873501, -0.319742);
  glVertex3f(-0.160955, -0.793783, -0.081799);
  glNormal3f(-0.828822, 0.535417, 0.162297);
  glVertex3f(0.573185, -0.299397, -0.071357);
  glNormal3f(-0.060030, 0.054018, -0.996704);
  glVertex3f(0.976615, -0.924653, -0.483356);
  glNormal3f(-0.025849, 0.076937, -0.996673);
  glVertex3f(0.232094, -1.367551, -0.495405);
  glNormal3f(-0.367046, 0.873501, -0.319742);
  glVertex3f(0.160955, -0.793783, -0.081799);
  glNormal3f(-0.518937, -0.508957, -0.686758);
  glVertex3f(-1.310660, -1.310660, -0.353553);
  glNormal3f(0.060030, 0.054018, -0.996704);
  glVertex3f(-0.976614, -0.924653, -0.483356);
  glNormal3f(0.025849, 0.076937, -0.996673);
  glVertex3f(-0.232094, -1.367552, -0.495405);
  glNormal3f(-0.175878, -0.705588, -0.686422);
  glVertex3f(-0.304390, -1.837851, -0.353553);
  glNormal3f(-0.025849, 0.076937, -0.996673);
  glVertex3f(0.232094, -1.367551, -0.495405);
  glNormal3f(0.175878, -0.705588, -0.686422);
  glVertex3f(0.304390, -1.837850, -0.353553);
  glNormal3f(-0.175878, -0.705588, -0.686422);
  glVertex3f(-0.304390, -1.837851, -0.353553);
  glNormal3f(0.025849, 0.076937, -0.996673);
  glVertex3f(-0.232094, -1.367552, -0.495405);
  glNormal3f(0.175878, -0.705588, -0.686422);
  glVertex3f(0.304390, -1.837850, -0.353553);
  glNormal3f(-0.025849, 0.076937, -0.996673);
  glVertex3f(0.232094, -1.367551, -0.495405);
  glNormal3f(-0.060030, 0.054018, -0.996704);
  glVertex3f(0.976615, -0.924653, -0.483356);
  glNormal3f(0.518937, -0.508957, -0.686758);
  glVertex3f(1.310660, -1.310660, -0.353553);
  glNormal3f(-0.518937, -0.508957, -0.686758);
  glVertex3f(-1.310660, -1.310660, -0.353553);
  glNormal3f(-0.675924, -0.667898, -0.311441);
  glVertex3f(-1.411218, -1.411218, 0.082110);
  glNormal3f(-0.947203, -0.056154, -0.315622);
  glVertex3f(-1.949553, -0.351797, 0.080904);
  glNormal3f(-0.727592, -0.012146, -0.685873);
  glVertex3f(-1.810635, -0.326355, -0.348362);
  glNormal3f(-0.675924, -0.667898, -0.311441);
  glVertex3f(-1.411218, -1.411218, 0.082110);
  glNormal3f(-0.518937, -0.508957, -0.686758);
  glVertex3f(-1.310660, -1.310660, -0.353553);
  glNormal3f(-0.175878, -0.705588, -0.686422);
  glVertex3f(-0.304390, -1.837851, -0.353553);
  glNormal3f(-0.223945, -0.923643, -0.310953);
  glVertex3f(-0.327744, -1.978857, 0.082110);
  glNormal3f(0.175878, -0.705588, -0.686422);
  glVertex3f(0.304390, -1.837850, -0.353553);
  glNormal3f(0.223945, -0.923643, -0.310953);
  glVertex3f(0.327744, -1.978857, 0.082110);
  glNormal3f(-0.223945, -0.923643, -0.310953);
  glVertex3f(-0.327744, -1.978857, 0.082110);
  glNormal3f(-0.175878, -0.705588, -0.686422);
  glVertex3f(-0.304390, -1.837851, -0.353553);
  glNormal3f(0.223945, -0.923643, -0.310953);
  glVertex3f(0.327744, -1.978857, 0.082110);
  glNormal3f(0.175878, -0.705588, -0.686422);
  glVertex3f(0.304390, -1.837850, -0.353553);
  glNormal3f(0.518937, -0.508957, -0.686758);
  glVertex3f(1.310660, -1.310660, -0.353553);
  glNormal3f(0.675924, -0.667898, -0.311441);
  glVertex3f(1.411219, -1.411218, 0.082110);
  glNormal3f(0.727592, -0.012146, -0.685873);
  glVertex3f(1.810635, -0.326354, -0.348362);
  glNormal3f(0.947203, -0.056154, -0.315622);
  glVertex3f(1.949553, -0.351796, 0.080904);
  glNormal3f(0.675924, -0.667898, -0.311441);
  glVertex3f(1.411219, -1.411218, 0.082110);
  glNormal3f(0.518937, -0.508957, -0.686758);
  glVertex3f(1.310660, -1.310660, -0.353553);
  glNormal3f(0.558031, 0.518876, -0.647542);
  glVertex3f(1.633730, 0.131893, -0.312783);
  glNormal3f(0.769066, 0.581225, -0.265877);
  glVertex3f(1.759076, 0.138848, 0.072641);
  glNormal3f(0.947203, -0.056154, -0.315622);
  glVertex3f(1.949553, -0.351796, 0.080904);
  glNormal3f(0.727592, -0.012146, -0.685873);
  glVertex3f(1.810635, -0.326354, -0.348362);
  glNormal3f(0.304453, 0.720450, -0.623066);
  glVertex3f(0.840182, 0.662488, -0.200356);
  glNormal3f(0.444075, 0.863430, -0.239296);
  glVertex3f(0.904643, 0.701425, 0.046531);
  glNormal3f(0.769066, 0.581225, -0.265877);
  glVertex3f(1.759076, 0.138848, 0.072641);
  glNormal3f(0.558031, 0.518876, -0.647542);
  glVertex3f(1.633730, 0.131893, -0.312783);
  glNormal3f(0.113712, 0.746147, -0.655965);
  glVertex3f(0.127486, 0.928963, -0.138735);
  glNormal3f(0.167333, 0.943266, -0.286752);
  glVertex3f(0.137267, 0.983562, 0.032220);
  glNormal3f(0.444075, 0.863430, -0.239296);
  glVertex3f(0.904643, 0.701425, 0.046531);
  glNormal3f(0.304453, 0.720450, -0.623066);
  glVertex3f(0.840182, 0.662488, -0.200356);
  glNormal3f(-0.113712, 0.746147, -0.655965);
  glVertex3f(-0.127486, 0.928963, -0.138735);
  glNormal3f(-0.167333, 0.943266, -0.286752);
  glVertex3f(-0.137267, 0.983562, 0.032220);
  glNormal3f(0.167333, 0.943266, -0.286752);
  glVertex3f(0.137267, 0.983562, 0.032220);
  glNormal3f(0.113712, 0.746147, -0.655965);
  glVertex3f(0.127486, 0.928963, -0.138735);
  glNormal3f(-0.304453, 0.720450, -0.623066);
  glVertex3f(-0.840181, 0.662488, -0.200356);
  glNormal3f(-0.444075, 0.863430, -0.239296);
  glVertex3f(-0.904643, 0.701425, 0.046531);
  glNormal3f(-0.167333, 0.943266, -0.286752);
  glVertex3f(-0.137267, 0.983562, 0.032220);
  glNormal3f(-0.113712, 0.746147, -0.655965);
  glVertex3f(-0.127486, 0.928963, -0.138735);
  glNormal3f(-0.558031, 0.518876, -0.647542);
  glVertex3f(-1.633730, 0.131893, -0.312783);
  glNormal3f(-0.769066, 0.581225, -0.265877);
  glVertex3f(-1.759076, 0.138848, 0.072641);
  glNormal3f(-0.444075, 0.863430, -0.239296);
  glVertex3f(-0.904643, 0.701425, 0.046531);
  glNormal3f(-0.304453, 0.720450, -0.623066);
  glVertex3f(-0.840181, 0.662488, -0.200356);
  glNormal3f(-0.727592, -0.012146, -0.685873);
  glVertex3f(-1.810635, -0.326355, -0.348362);
  glNormal3f(-0.947203, -0.056154, -0.315622);
  glVertex3f(-1.949553, -0.351797, 0.080904);
  glNormal3f(-0.769066, 0.581225, -0.265877);
  glVertex3f(-1.759076, 0.138848, 0.072641);
  glNormal3f(-0.558031, 0.518876, -0.647542);
  glVertex3f(-1.633730, 0.131893, -0.312783);
  glNormal3f(0.467910, 0.214881, -0.857234);
  glVertex3f(-0.573185, -0.299397, -0.071357);
  glNormal3f(0.060030, 0.054018, -0.996704);
  glVertex3f(-0.976614, -0.924653, -0.483356);
  glNormal3f(0.046297, 0.072298, -0.996277);
  glVertex3f(-1.315161, -0.214595, -0.455109);
  glNormal3f(0.496933, -0.018708, -0.867580);
  glVertex3f(-0.612688, 0.003778, -0.051979);
  glNormal3f(-0.496933, -0.018708, -0.867580);
  glVertex3f(0.612688, 0.003778, -0.051979);
  glNormal3f(-0.046297, 0.072298, -0.996277);
  glVertex3f(1.315161, -0.214595, -0.455109);
  glNormal3f(-0.060030, 0.054018, -0.996704);
  glVertex3f(0.976615, -0.924653, -0.483356);
  glNormal3f(-0.467910, 0.214881, -0.857234);
  glVertex3f(0.573185, -0.299397, -0.071357);
  glNormal3f(-0.481216, -0.269417, -0.834162);
  glVertex3f(0.516843, 0.114116, -0.043716);
  glNormal3f(-0.128941, 0.124577, -0.983764);
  glVertex3f(1.179837, 0.115097, -0.405219);
  glNormal3f(-0.046297, 0.072298, -0.996277);
  glVertex3f(1.315161, -0.214595, -0.455109);
  glNormal3f(-0.496933, -0.018708, -0.867580);
  glVertex3f(0.612688, 0.003778, -0.051979);
  glNormal3f(-0.415906, -0.486953, -0.768029);
  glVertex3f(0.318284, 0.429945, -0.035778);
  glNormal3f(-0.191748, 0.020295, -0.981201);
  glVertex3f(0.616718, 0.543203, -0.268538);
  glNormal3f(-0.128941, 0.124577, -0.983764);
  glVertex3f(1.179837, 0.115097, -0.405219);
  glNormal3f(-0.481216, -0.269417, -0.834162);
  glVertex3f(0.516843, 0.114116, -0.043716);
  glNormal3f(-0.196387, -0.662954, -0.722434);
  glVertex3f(0.065110, 0.602883, -0.031909);
  glNormal3f(-0.089206, -0.129185, -0.987579);
  glVertex3f(0.096770, 0.761698, -0.194180);
  glNormal3f(-0.191748, 0.020295, -0.981201);
  glVertex3f(0.616718, 0.543203, -0.268538);
  glNormal3f(-0.415906, -0.486953, -0.768029);
  glVertex3f(0.318284, 0.429945, -0.035778);
  glNormal3f(0.196387, -0.662954, -0.722434);
  glVertex3f(-0.065110, 0.602883, -0.031909);
  glNormal3f(0.089206, -0.129185, -0.987579);
  glVertex3f(-0.096770, 0.761698, -0.194180);
  glNormal3f(-0.089206, -0.129185, -0.987579);
  glVertex3f(0.096770, 0.761698, -0.194180);
  glNormal3f(-0.196387, -0.662954, -0.722434);
  glVertex3f(0.065110, 0.602883, -0.031909);
  glNormal3f(0.415906, -0.486953, -0.768029);
  glVertex3f(-0.318285, 0.429945, -0.035778);
  glNormal3f(0.191748, 0.020295, -0.981201);
  glVertex3f(-0.616718, 0.543204, -0.268538);
  glNormal3f(0.089206, -0.129185, -0.987579);
  glVertex3f(-0.096770, 0.761698, -0.194180);
  glNormal3f(0.196387, -0.662954, -0.722434);
  glVertex3f(-0.065110, 0.602883, -0.031909);
  glNormal3f(0.481216, -0.269417, -0.834162);
  glVertex3f(-0.516843, 0.114116, -0.043716);
  glNormal3f(0.128941, 0.124577, -0.983764);
  glVertex3f(-1.179837, 0.115096, -0.405219);
  glNormal3f(0.191748, 0.020295, -0.981201);
  glVertex3f(-0.616718, 0.543204, -0.268538);
  glNormal3f(0.415906, -0.486953, -0.768029);
  glVertex3f(-0.318285, 0.429945, -0.035778);
  glNormal3f(0.496933, -0.018708, -0.867580);
  glVertex3f(-0.612688, 0.003778, -0.051979);
  glNormal3f(0.046297, 0.072298, -0.996277);
  glVertex3f(-1.315161, -0.214595, -0.455109);
  glNormal3f(0.128941, 0.124577, -0.983764);
  glVertex3f(-1.179837, 0.115096, -0.405219);
  glNormal3f(0.481216, -0.269417, -0.834162);
  glVertex3f(-0.516843, 0.114116, -0.043716);
  glNormal3f(0.060030, 0.054018, -0.996704);
  glVertex3f(-0.976614, -0.924653, -0.483356);
  glNormal3f(-0.518937, -0.508957, -0.686758);
  glVertex3f(-1.310660, -1.310660, -0.353553);
  glNormal3f(-0.727592, -0.012146, -0.685873);
  glVertex3f(-1.810635, -0.326355, -0.348362);
  glNormal3f(0.046297, 0.072298, -0.996277);
  glVertex3f(-1.315161, -0.214595, -0.455109);
  glNormal3f(-0.046297, 0.072298, -0.996277);
  glVertex3f(1.315161, -0.214595, -0.455109);
  glNormal3f(0.727592, -0.012146, -0.685873);
  glVertex3f(1.810635, -0.326354, -0.348362);
  glNormal3f(0.518937, -0.508957, -0.686758);
  glVertex3f(1.310660, -1.310660, -0.353553);
  glNormal3f(-0.060030, 0.054018, -0.996704);
  glVertex3f(0.976615, -0.924653, -0.483356);
  glNormal3f(-0.128941, 0.124577, -0.983764);
  glVertex3f(1.179837, 0.115097, -0.405219);
  glNormal3f(0.558031, 0.518876, -0.647542);
  glVertex3f(1.633730, 0.131893, -0.312783);
  glNormal3f(0.727592, -0.012146, -0.685873);
  glVertex3f(1.810635, -0.326354, -0.348362);
  glNormal3f(-0.046297, 0.072298, -0.996277);
  glVertex3f(1.315161, -0.214595, -0.455109);
  glNormal3f(-0.191748, 0.020295, -0.981201);
  glVertex3f(0.616718, 0.543203, -0.268538);
  glNormal3f(0.304453, 0.720450, -0.623066);
  glVertex3f(0.840182, 0.662488, -0.200356);
  glNormal3f(0.558031, 0.518876, -0.647542);
  glVertex3f(1.633730, 0.131893, -0.312783);
  glNormal3f(-0.128941, 0.124577, -0.983764);
  glVertex3f(1.179837, 0.115097, -0.405219);
  glNormal3f(-0.089206, -0.129185, -0.987579);
  glVertex3f(0.096770, 0.761698, -0.194180);
  glNormal3f(0.113712, 0.746147, -0.655965);
  glVertex3f(0.127486, 0.928963, -0.138735);
  glNormal3f(0.304453, 0.720450, -0.623066);
  glVertex3f(0.840182, 0.662488, -0.200356);
  glNormal3f(-0.191748, 0.020295, -0.981201);
  glVertex3f(0.616718, 0.543203, -0.268538);
  glNormal3f(0.089206, -0.129185, -0.987579);
  glVertex3f(-0.096770, 0.761698, -0.194180);
  glNormal3f(-0.113712, 0.746147, -0.655965);
  glVertex3f(-0.127486, 0.928963, -0.138735);
  glNormal3f(0.113712, 0.746147, -0.655965);
  glVertex3f(0.127486, 0.928963, -0.138735);
  glNormal3f(-0.089206, -0.129185, -0.987579);
  glVertex3f(0.096770, 0.761698, -0.194180);
  glNormal3f(0.191748, 0.020295, -0.981201);
  glVertex3f(-0.616718, 0.543204, -0.268538);
  glNormal3f(-0.304453, 0.720450, -0.623066);
  glVertex3f(-0.840181, 0.662488, -0.200356);
  glNormal3f(-0.113712, 0.746147, -0.655965);
  glVertex3f(-0.127486, 0.928963, -0.138735);
  glNormal3f(0.089206, -0.129185, -0.987579);
  glVertex3f(-0.096770, 0.761698, -0.194180);
  glNormal3f(0.128941, 0.124577, -0.983764);
  glVertex3f(-1.179837, 0.115096, -0.405219);
  glNormal3f(-0.558031, 0.518876, -0.647542);
  glVertex3f(-1.633730, 0.131893, -0.312783);
  glNormal3f(-0.304453, 0.720450, -0.623066);
  glVertex3f(-0.840181, 0.662488, -0.200356);
  glNormal3f(0.191748, 0.020295, -0.981201);
  glVertex3f(-0.616718, 0.543204, -0.268538);
  glNormal3f(0.046297, 0.072298, -0.996277);
  glVertex3f(-1.315161, -0.214595, -0.455109);
  glNormal3f(-0.727592, -0.012146, -0.685873);
  glVertex3f(-1.810635, -0.326355, -0.348362);
  glNormal3f(-0.558031, 0.518876, -0.647542);
  glVertex3f(-1.633730, 0.131893, -0.312783);
  glNormal3f(0.128941, 0.124577, -0.983764);
  glVertex3f(-1.179837, 0.115096, -0.405219);
glEnd();


glEndList();

}

Enemy::~Enemy() {
   // do nothing
}


void Enemy::action(float dt) {

quaternion Q;
vector3 ax;

   switch(state) {

      case MOVING:
          //force.set(0.0, 0.0, 0.0);
         if(delay < 0.0) {
            delay = 0.1;
            state = TARGET;
         }
         break;

      case TARGET:
         if(delay < 0.0) {

            float pd = degToRad(uniform_random_float(0.0, 360.0));
            target_pos = player->getPosition()+vector3(cos(pd), sin(pd), 0.0) * 2.0;

            target_dir = !(target_pos - position);

/*
            float angle = direction*target_dir;  
            angle = radToDeg(acos((angle>=one)?one:(angle<=-one)?-one:angle)) ;
            
            float ca = direction*vector3(1.0,0.0,0.0);
            ca = radToDeg(acos((ca>=one)?one:(ca<=-one)?-one:ca)) ;


           if(fabs(angle) > 2.0f) {
            angular_vel = !(direction % target_dir);
            angular_vel.scale(degToRad(w_spd*dt));
            }
            else
                 angular_vel.set(0,0,0);

            //printf("%p ca %f angle %f  avel %f %f %f\n", (void*)this, ca, angle, angular_vel.x, angular_vel.y, angular_vel.z);

//            float angle = target_hpr[0];
            //float angle = sgAngleBetweenNormalizedVec3(direction, target);  

            //dst.setAxisAngle(vector3(0.0, 0.0, -1.0), angle); 
            //sgAngleAxisToQuat(dst, angle, 0.0, 0.0, -1.0);

            //src = rot;

            delay = 0.1+angle/(w_spd*dt);
*/
            delay = 0.1;
            state = TRACKING;
         }
         break;

      case TRACKING:


/*
         rot += (angular_vel*rot)*0.5;

         rot.normalize();

         Q = rot * vector3(1.0, 0.0, 0.0) * ~rot;
         direction = Q.v;


//            vel += direction * v_acc;
        //sgSlerpQuat(rot, src, dst, (15.0-delay)/15.0);

         ax = rot.getAxis();

//printf("%p %d direction %f %f %f qangle %f axis %f %f %f\n", (void*)this, delay, direction.x, direction.y, direction.z, rot.getAngle(), ax.x, ax.y, ax.z);
         if(delay < 0.0) {

           //rot = dst;

         //direction = target_dir;

            // acceleration

            //velocity += direction * v_acc;
*/
            if(delay < 0.0) {
               force = target_dir * v_acc;
   
               delay = 1.0;
               state = MOVING;
         }
         break;

      default: 
         delay = 0.1;
         state = TARGET;
         break;
   } 

/*
   // friction
   float vmag = velocity.lengthSquared();
   if(vmag > 0.0f) {
      vector3 friction(velocity);
      friction.normalize();
      velocity += friction * (-0.001f-0.05f*vmag/(v_spd*v_spd));
   }

   // clamp velocity
   if(velocity.lengthSquared() > v_spd*v_spd) {
      vector3 n(velocity);
      n.normalize();

      velocity= n * v_spd;
   }
         //position += velocity;
*/ 
}


void Enemy::render() {

   float green[] = { 0.5, 0.8, 1.0, 1.0 };
   float red[] = { 0.9, 0.3, 0.4, 1.0 };
   float white[] = { 1.0, 1.0, 1.0, 1.0 };

   glPushMatrix();
   glTranslatef(position.x, position.y, position.z);

/*
   glDisable(GL_LIGHTING);
   glBegin(GL_LINES);
    glColor4f(1.0, 1.0, 1.0, 1.0);
    glVertex3f(0.0, 0.0, 0.0);
    glVertex3f(direction.x, direction.y, direction.z);
    glColor4f(1.0, 1.0, 0.0, 1.0);
    glVertex3f(0.0, 0.0, 0.0);
    glVertex3f(velocity.x, velocity.y, velocity.z);
    glEnd();
   glEnable(GL_LIGHTING);
*/


   glPushMatrix();
   vector3 axis = rot.getAxis();
   float angle = rot.getAngle();

   //sgQuatToAngleAxis(&angle, axis, rot);
   
   glScalef(0.2, 0.2, 0.2);

   glRotatef(-90, 0.0, 0.0, 1.0);
   glRotatef(angle, axis.x, axis.y, axis.z);

   glCallList(dl_enemy);


  glPopMatrix();
  glPopMatrix();

}

